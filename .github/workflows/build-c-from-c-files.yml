name: Build C files -> Linux + Windows .exe

on:
  push:
  pull_request:

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build tools and mingw-w64
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential mingw-w64

      - name: Compile all .c files to Linux executables and Windows .exe (cross-compile)
        run: |
          set -e
          mkdir -p build/linux build/windows

          # find all .c files (skip .git)
          find . -type f -name '*.c' -not -path './.git/*' -print0 | while IFS= read -r -d '' src; do
            # location-aware basename: preserve directory structure if desired
            # using a flat name here to avoid conflicts; modify if you want subdirs
            base=$(basename "$src" .c)

            echo "Compiling $src -> build/linux/$base and build/windows/$base.exe"

            # Native Linux build
            gcc -O2 -Wall -Wextra -std=c11 -o "build/linux/$base" "$src" || {
              echo "Linux build failed for $src"; exit 1;
            }

            # Cross-compile Windows 64-bit .exe
            x86_64-w64-mingw32-gcc -O2 -Wall -Wextra -std=c11 -o "build/windows/$base.exe" "$src" || {
              echo "Windows .exe build failed for $src"; exit 1;
            }
          done

          # Ensure linux binaries are executable
          chmod +x build/linux/* || true

      - name: List built binaries
        run: |
          echo "Linux binaries:"
          ls -la build/linux || true
          echo "Windows .exe binaries:"
          ls -la build/windows || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: compiled-binaries
          path: |
            build/linux
            build/windows
